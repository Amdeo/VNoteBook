vnote_backup_file_826537664 G:/jianguo/我的坚果云/code/笔记/VNoteBook/代码片段/C++/命令空间.md
# 命令空间
func.h
```
//
// Created by amdeo on 2019-07-02.
//
 
#ifndef LINUX_C_FUNC_H
#define LINUX_C_FUNC_H
 
//声明一个命名空间
namespace ydb
{
    void process_test();
}
 
 
#endif //LINUX_C_FUNC_H
```

func.cpp
```
//
// Created by amdeo on 2019-07-02.
//
#include "func.h"
#include <iostream>
#include <unistd.h>
#include "common.h"
#include<unistd.h>
#include<sys/types.h>
 
//在cpp文件中 直接使用 (::)实现函数
void ydb::process_test()
{
    pid_t pid;
    int i = 0;
    cout<<"before fork\n";
    pid = fork();
    cout<<"after fork\n";
    if (pid < 0)
    {
        cout<< "fork failed" <<endl;
    }
    else if(pid == 0)   //子进程
    {
        while (i<10) {
            cout << "I am child,i = " << i << endl;
            i += 1;
        }
        cout << "child process is " << getpid() << endl;
    }
    else{
        //父进程
        //sleep(10);
        while (i<10){
            cout<<"I am parent,i = "<<i<<endl;
            i += 2;
        }
 
        cout<< "parent process is " <<getpid()<<endl;
    }
    cout<<"exit process\n";
}
```

mian.cpp
```
#include "common.h"
#include "func.h"
 
int main() {
    //在main函数中直接使用（ydb::）调用
    ydb::process_test();
    return 0;
}
```

```
#include <iostream>
#include <string>
int main(){
    //声明命名空间std
    using namespace std;
   
    //定义字符串变量
    string str;
    //定义 int 变量
    int age;
    //从控制台获取用户输入
    cin>>str>>age;
    //将数据输出到控制台
    cout<<str<<"已经成立"<<age<<"年了！"<<endl;
    return 0;
}
```
//这里的using namespace 只对当前的函数体内有效，我们可以将using namespace影响范围缩小